package JavaApp;

import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue; 

import java.io.FileReader;
import java.util.Iterator;

import org.json.simple.parser.JSONParser;

import twitter4j.*;
import twitter4j.auth.AccessToken;


public class Insert_class {

	private Search search;
	List <Status> status_list;


	public Insert_class() {
		super();
	}

	public Insert_class(Search search, List<Status> status_list) {
		super();
		this.search = search;
		this.status_list = status_list;
	}

	public Search getSearch() {
		return search;
	}

	public void setSearch(Search search) {
		this.search = search;
	}

	public List<Status> getStatus_list() {
		return status_list;
	}

	public void setStatus_list(List<Status> status_list) {
		this.status_list = status_list;
	}

	public void insert_parameters() throws SQLException
	{
		//gerer toutes les insertions
		Connection connexion = null;
		Statement stmt = null, stmt1 = null;
		PreparedStatement smt;
		ResultSet rs,rs1;
		//Rest_search r = new Rest_search();
		try {

			connexion = DriverManager.getConnection(
					"jdbc:postgresql://localhost:5432/extractstweet", "postgres",
					"s");
			connexion.setAutoCommit(false);
			stmt = connexion.createStatement();
			stmt1 = connexion.createStatement();
			String sql ="";
			String sql2 ="";
			//insertion des mots clés
			for(int i=0;i<this.getSearch().getKeywords().size();i++)
			{
				//System.out.println(this.getSearch().getKeywords().get(i));
				sql2 = "SELECT * from \"Keyword\" where words ='"+this.getSearch().getKeywords().get(i)+"'";
				rs = stmt.executeQuery(sql2);
				if(!rs.next())
				{
					if(this.getSearch().getLanguage() != "")
						sql = "INSERT INTO \"Keyword\" (language,words) VALUES ('"+this.getSearch().getLanguage()+"',"
								+"'"+this.getSearch().getKeywords().get(i)+"')";
					else 
						sql = "INSERT INTO \"Keyword\" (language,words) VALUES ('fr',"
								+"'"+this.getSearch().getKeywords().get(i)+"')";
					//System.out.println(sql);
					stmt.executeUpdate(sql);

				}
			}
			//insertion des hashtags
			for(int i=0;i<this.getSearch().getHashtags().size();i++)
			{
				sql2 = "SELECT * from \"Hashtag\" where hashtags ='"+this.getSearch().getHashtags().get(i)+"'";
				rs = stmt.executeQuery(sql2);
				if(!rs.next())
				{
					//System.out.println(this.getSearch().getHashtags().get(i));
					sql = "INSERT INTO \"Hashtag\" (hashtags) VALUES ("
							+"'"+this.getSearch().getHashtags().get(i)+"')";
					//System.out.println(sql);
					stmt.executeUpdate(sql);
				}

			}
			//insertion dans la table search parameters
			sql2 = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
			rs = stmt.executeQuery(sql2);
			if(!rs.next())
			{
				//System.out.println(this.getSearch().getSearch_title().get(i));
				Date parsed = null;
				if(this.getSearch().getClass().getName().equals("JavaApp.Rest_search"))
					//System.out.println(((Rest_search)this.getSearch()).getHour_max());
				{

					SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
					java.sql.Date s =null;
					if((((Rest_search)this.getSearch()).getDate()) != "")
					{
						parsed = format.parse(((Rest_search)this.getSearch()).getDate());
						s = new java.sql.Date(parsed.getTime());
						System.out.println(s);
					}
					sql = "INSERT INTO \"Search_parameters\" (search_title,hour_min,hour_max,current,since) VALUES ('"
							+this.getSearch().getSearch_title()+"',"
							+ ((Rest_search)this.getSearch()).getHour_min()+ ","
							+((Rest_search)this.getSearch()).getHour_max()+",false,?)";
					smt = connexion.prepareStatement(sql);
					smt.setDate(1,s);
					smt.executeUpdate();


				}
				else
				{
					sql = "INSERT INTO \"Search_parameters\" (search_title,hour_min,hour_max,current,since) VALUES ('"
							+this.getSearch().getSearch_title()+"',0,0,true,NULL)";
					//stmt.executeUpdate(sql);
					stmt.executeUpdate(sql);
				}
			}
			//insertion dans search_date
			sql2 = "SELECT * FROM \"Search_date\" WHERE search_date=?";
			smt = connexion.prepareStatement(sql2);
			smt.setTimestamp(1,new java.sql.Timestamp(this.getSearch().getSearch_time().getTime()));
			rs = smt.executeQuery();
			if(!rs.next())
			{
				sql = "INSERT INTO \"Search_date\" (search_date) VALUES(?)";
				smt = connexion.prepareStatement(sql);
				smt.setTimestamp(1,new java.sql.Timestamp(this.getSearch().getSearch_time().getTime()));
				smt.executeUpdate();
			}
			//insertion dans Contain
			for(int i=0;i<this.getSearch().getKeywords().size();i++)
			{
				sql = "SELECT * FROM \"Keyword\" where words ='"+this.getSearch().getKeywords().get(i)+"'";
				rs = stmt.executeQuery(sql);
				while(rs.next())
				{
					int id_kw = rs.getInt("id_kw");
					sql2 = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
					rs1 = stmt1.executeQuery(sql2);
					while(rs1.next())
					{
						int id_s = rs1.getInt("id_search");
						sql2 = "INSERT INTO \"Contain\" values(?,?)";
						smt = connexion.prepareStatement(sql2);
						smt.setInt(1, id_s);
						smt.setInt(2, id_kw);
						smt.executeUpdate();
					}
				}
			}
			//Insertion dans contain1
			for(int i=0;i<this.getSearch().getHashtags().size();i++)
			{
				sql = "SELECT * FROM \"Hashtag\" where hashtags ='"+this.getSearch().getHashtags().get(i)+"'";
				rs = stmt.executeQuery(sql);
				while(rs.next())
				{
					int id_ht = rs.getInt("id_ht");
					sql2 = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
					rs1 = stmt1.executeQuery(sql2);
					while(rs1.next())
					{
						int id_s = rs1.getInt("id_search");
						sql2 = "INSERT INTO \"Contain1\" values(?,?)";
						smt = connexion.prepareStatement(sql2);
						smt.setInt(1, id_s);
						smt.setInt(2, id_ht);
						smt.executeUpdate();
					}
				}
			}
			//insertion dans location
			if(this.getSearch().getClass().getName().equals("JavaApp.Rest_search"))
				for(Bounding_box_rest b : ((Rest_search)this.getSearch()).getBb())
				{
					sql2 = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
					rs1 = stmt1.executeQuery(sql2);
					while(rs1.next())
					{
						int id_s = rs1.getInt("id_search");
						sql2 = "INSERT INTO \"Location\" values(?,?)";
						smt = connexion.prepareStatement(sql2);
						smt.setInt(1, id_s);
						smt.setInt(2, b.getId());
						smt.executeUpdate();
					}
				}
			if(this.getSearch().getClass().getName().equals("JavaApp.Streaming_search"))
				for(Bounding_box_stream b : ((Streaming_search)this.getSearch()).getBb())
				{
					sql2 = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
					rs1 = stmt1.executeQuery(sql2);
					while(rs1.next())
					{
						int id_s = rs1.getInt("id_search");
						sql2 = "INSERT INTO \"Location\" values(?,?)";
						smt = connexion.prepareStatement(sql2);
						smt.setInt(1, id_s);
						smt.setInt(2, b.getId());
						smt.executeUpdate();
					}
				}
			sql2 = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
			rs1 = stmt1.executeQuery(sql2);
			while(rs1.next())
			{
				int id_s = rs1.getInt("id_search");
				sql2 = "INSERT INTO \"Search1\" (ut_id,search_id,iua_id) values(?,?,?)";
				smt = connexion.prepareStatement(sql2);
				smt.setInt(1, this.getSearch().getUi().getUt_id());
				smt.setInt(2, id_s);
				smt.setInt(3, this.getSearch().getUi().getIua_id());
				smt.executeUpdate();
			}
			//rs.close();
			connexion.commit();
		}catch(SQLException se){
			//Handle errors for JDBC
			connexion.rollback();
			se.printStackTrace();
		}catch(Exception e){
			//Handle errors for Class.forName
			connexion.rollback();
			e.printStackTrace();
		}		
	}
	public void add(Status s) throws SQLException{
		//		this.status_list.add(s);
		//		if(this.status_list.size() > 100)
		//		{
		//			//gerer toutes les insertions
		Connection connexion = null;
		Statement stmt = null;
		int id_date = 0;
		PreparedStatement smt = null;
		ResultSet rs =null;

		String sql ="", sql2 = "";
		try {

			connexion = DriverManager.getConnection(
					"jdbc:postgresql://localhost:5432/extractstweet", "postgres",
					"s");
			connexion.setAutoCommit(false);
			stmt = connexion.createStatement();

			if(s.isRetweet())
			{

				sql2 = "SELECT * FROM \"User_tweet\" WHERE id_user ="+s.getUser().getId();
				rs = stmt.executeQuery(sql2);
				if(!rs.next())
				{
					sql ="INSERT INTO \"User_tweet\" (id_user,created_at,description,favorites_count,followers_count,friends_count"
							+ ",listed_count,location,name,screen_name,is_geo_enable,is_verified) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
					smt = connexion.prepareStatement(sql);

					smt.setLong(1, s.getUser().getId());
					smt.setTimestamp(2, new java.sql.Timestamp(s.getUser().getCreatedAt().getTime()));
					smt.setString(3, s.getUser().getDescription());
					smt.setInt(4, s.getUser().getFavouritesCount());
					smt.setInt(5, s.getUser().getFollowersCount());
					smt.setInt(6, s.getUser().getFriendsCount());
					smt.setInt(7, s.getUser().getListedCount());
					smt.setString(8, s.getUser().getLocation());
					smt.setString(9, s.getUser().getName());
					smt.setString(10, s.getUser().getScreenName());
					smt.setBoolean(11, s.getUser().isGeoEnabled());
					smt.setBoolean(12, s.getUser().isVerified());

					smt.executeUpdate();
				}

				if(s.getPlace() != null)
				{
					sql2 = "SELECT * FROM \"Place\" WHERE id_place ='"+s.getPlace().getId()+"'";
					rs = stmt.executeQuery(sql2);
					if(!rs.next())
					{
						sql = "INSERT INTO \"Place\" (id_place,bounding_box_coordinates,geometry_coordinates,geometry_type,"
								+ "bounding_box_type,country,fullname,contry_code,name,place_type,street_address,url) "
								+ "VALUES(?,?,?,?,?,?,?,?,?,?,?,?";

						smt = connexion.prepareStatement(sql);

						smt.setString(1, s.getPlace().getId());
						smt.setString(2, Arrays.deepToString(s.getPlace().getBoundingBoxCoordinates()));
						smt.setString(3, Arrays.deepToString(s.getPlace().getGeometryCoordinates()));
						smt.setString(4, s.getPlace().getGeometryType());
						smt.setString(5, s.getPlace().getBoundingBoxType());
						smt.setString(6, s.getPlace().getCountry());
						smt.setString(7, s.getPlace().getFullName());
						smt.setString(8, s.getPlace().getCountryCode());
						smt.setString(9, s.getPlace().getName());
						smt.setString(10, s.getPlace().getPlaceType());
						smt.setString(11, s.getPlace().getStreetAddress());
						smt.setString(12, s.getPlace().getURL());

						smt.executeUpdate();
					}

				}

				sql2 = "SELECT * FROM \"Tweet\" WHERE id_tweet ='"+s.getId()+"'";
				rs = stmt.executeQuery(sql2);
				if(!rs.next())
				{
					sql ="INSERT INTO \"Tweet\"(id_tweet,date_tweet,current_user_retweet_id,favorite_count,longitude,latitude"
							+ ",in_reply_to_screen_name,in_reply_to_status_id,in_reply_to_user_id,user_id,lang,retweet_count,text,is_retweet,is_retweeted,is_retweeted_by_me"
							+ ",is_truncated,scopes,all_info,place_id) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
					smt = connexion.prepareStatement(sql);

					smt.setString(1, String.valueOf(s.getId()));
					smt.setTimestamp(2, new java.sql.Timestamp(s.getCreatedAt().getTime()));
					smt.setLong(3, s.getCurrentUserRetweetId());
					smt.setInt(4, s.getFavoriteCount());
					if(s.getGeoLocation() != null)
					{
						smt.setDouble(5, s.getGeoLocation().getLongitude());
						smt.setDouble(6, s.getGeoLocation().getLatitude());
					}
					else
					{
						smt.setDouble(5, 0);
						smt.setDouble(6, 0);
					}
					smt.setString(7, s.getInReplyToScreenName());
					smt.setString(8, String.valueOf(s.getInReplyToStatusId()));
					smt.setLong(9, s.getInReplyToUserId());
					smt.setLong(10, s.getUser().getId());
					smt.setString(11, s.getLang());
					smt.setInt(12, s.getRetweetCount());
					smt.setString(13, s.getText());
					smt.setBoolean(14, s.isRetweet());
					smt.setBoolean(15, s.isRetweeted());
					smt.setBoolean(16, s.isRetweetedByMe());
					smt.setBoolean(17, s.isTruncated());
					if(s.getScopes() != null)
						smt.setString(18, Arrays.toString(s.getScopes().getPlaceIds()));
					else
						smt.setString(18, null);
					smt.setString(19, TwitterObjectFactory.getRawJSON(s));
					if(s.getPlace() != null)
						smt.setString(20, Arrays.toString(s.getScopes().getPlaceIds()));
					else
						smt.setString(20, null);

					smt.executeUpdate();
				}

				sql2 = "SELECT * FROM \"Search_date\" WHERE search_date=?";
				smt = connexion.prepareStatement(sql2);
				smt.setTimestamp(1,new java.sql.Timestamp(this.getSearch().getSearch_time().getTime()));
				rs = smt.executeQuery();
				if(rs.next())
				{
					id_date = rs.getInt("id_date");
				}

				sql = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
				rs = stmt.executeQuery(sql);
				while(rs.next())
				{
					int id_s = rs.getInt("id_search");
					sql2 = "INSERT INTO \"Search\" (sp_id,tweet_id,sd_id) values(?,?,?)";
					smt = connexion.prepareStatement(sql2);
					smt.setInt(1, id_s);
					smt.setString(2, String.valueOf(s.getId()));
					smt.setInt(3, id_date);
					smt.executeUpdate();
				}


				//add(s.getRetweetedStatus()); à GERER
			}
			else
			{

				if(s.getPlace() != null)
				{
					sql2 = "SELECT * FROM \"Place\" WHERE id_place ='"+s.getPlace().getId()+"'";
					rs = stmt.executeQuery(sql2);
					if(!rs.next())
					{
						sql = "INSERT INTO \"Place\" (id_place,bounding_box_coordinates,geometry_coordinates,geometry_type,"
								+ "bounding_box_type,country,fullname,contry_code,name,place_type,street_address,url) "
								+ "VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";

						smt = connexion.prepareStatement(sql);

						smt.setString(1, s.getPlace().getId());
						smt.setString(2, Arrays.deepToString(s.getPlace().getBoundingBoxCoordinates()));
						smt.setString(3, Arrays.deepToString(s.getPlace().getGeometryCoordinates()));
						smt.setString(4, s.getPlace().getGeometryType());
						smt.setString(5, s.getPlace().getBoundingBoxType());
						smt.setString(6, s.getPlace().getCountry());
						smt.setString(7, s.getPlace().getFullName());
						smt.setString(8, s.getPlace().getCountryCode());
						smt.setString(9, s.getPlace().getName());
						smt.setString(10, s.getPlace().getPlaceType());
						smt.setString(11, s.getPlace().getStreetAddress());
						smt.setString(12, s.getPlace().getURL());

						smt.executeUpdate();
					}

				}

				sql2 = "SELECT * FROM \"User_tweet\" WHERE id_user ="+s.getUser().getId();

				rs = stmt.executeQuery(sql2);
				if(!rs.next())
				{
					sql ="INSERT INTO \"User_tweet\" (id_user,created_at,description,favorites_count,followers_count,friends_count"
							+ ",listed_count,location,name,screen_name,is_geo_enable,is_verified) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
					smt = connexion.prepareStatement(sql);

					smt.setLong(1, s.getUser().getId());
					smt.setTimestamp(2, new java.sql.Timestamp(s.getUser().getCreatedAt().getTime()));
					smt.setString(3, s.getUser().getDescription());
					smt.setInt(4, s.getUser().getFavouritesCount());
					smt.setInt(5, s.getUser().getFollowersCount());
					smt.setInt(6, s.getUser().getFriendsCount());
					smt.setInt(7, s.getUser().getListedCount());
					smt.setString(8, s.getUser().getLocation());
					smt.setString(9, s.getUser().getName());
					smt.setString(10, s.getUser().getScreenName());
					smt.setBoolean(11, s.getUser().isGeoEnabled());
					smt.setBoolean(12, s.getUser().isVerified());

					smt.executeUpdate();
				}

				sql2 = "SELECT * FROM \"Tweet\" WHERE id_tweet ='"+s.getId()+"'";
				rs = stmt.executeQuery(sql2);
				if(!rs.next())
				{
					sql ="INSERT INTO \"Tweet\"(id_tweet,date_tweet,current_user_retweet_id,favorite_count,longitude,latitude"
							+ ",in_reply_to_screen_name,in_reply_to_status_id,in_reply_to_user_id,user_id,lang,retweet_count,text,is_retweet,is_retweeted,is_retweeted_by_me"
							+ ",is_truncated,scopes,all_info,place_id) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
					smt = connexion.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);

					smt.setString(1, String.valueOf(s.getId()));
					smt.setTimestamp(2, new java.sql.Timestamp(s.getCreatedAt().getTime()));
					smt.setLong(3, s.getCurrentUserRetweetId());
					smt.setInt(4, s.getFavoriteCount());
					if(s.getGeoLocation() != null)
					{
						smt.setDouble(5, s.getGeoLocation().getLongitude());
						smt.setDouble(6, s.getGeoLocation().getLatitude());
					}
					else
					{
						smt.setDouble(5, 0);
						smt.setDouble(6, 0);
					}
					smt.setString(7, s.getInReplyToScreenName());
					smt.setString(8, String.valueOf(s.getInReplyToStatusId()));
					smt.setLong(9, s.getInReplyToUserId());
					smt.setLong(10, s.getUser().getId());
					smt.setString(11, s.getLang());
					smt.setInt(12, s.getRetweetCount());
					smt.setString(13, s.getText());
					smt.setBoolean(14, s.isRetweet());
					smt.setBoolean(15, s.isRetweeted());
					smt.setBoolean(16, s.isRetweetedByMe());
					smt.setBoolean(17, s.isTruncated());
					if(s.getScopes() != null)
						smt.setString(18, Arrays.toString(s.getScopes().getPlaceIds()));
					else
						smt.setString(18, null);
					smt.setString(19, TwitterObjectFactory.getRawJSON(s));
					if(s.getPlace() != null)
						smt.setString(20, Arrays.toString(s.getScopes().getPlaceIds()));
					else
						smt.setString(20, null);

					smt.executeUpdate();
				}

				sql2 = "SELECT * FROM \"Search_date\" WHERE search_date=?";
				smt = connexion.prepareStatement(sql2);
				smt.setTimestamp(1,new java.sql.Timestamp(this.getSearch().getSearch_time().getTime()));
				rs = smt.executeQuery();
				if(rs.next())
				{
					id_date = rs.getInt("id_date");
				}

				sql = "SELECT * FROM \"Search_parameters\" WHERE search_title='"+this.getSearch().getSearch_title()+"'";
				stmt = connexion.createStatement();
				rs = stmt.executeQuery(sql);
				while(rs.next())
				{
					int id_s = rs.getInt("id_search");
					sql2 = "INSERT INTO \"Search\" (sp_id,tweet_id,sd_id) values(?,?,?)";
					smt = connexion.prepareStatement(sql2);
					smt.setInt(1, id_s);
					smt.setString(2, String.valueOf(s.getId()));
					smt.setInt(3, id_date);
					smt.executeUpdate();
				}

			}
			//stmt.executeUpdate(sql,Statement.RETURN_GENERATED_KEYS);


			//rs.close();
			connexion.commit();
		}catch(SQLException se){
			//Handle errors for JDBC
			connexion.rollback();
			se.printStackTrace();
		}catch(Exception e){
			//Handle errors for Class.forName
			//connexion.rollback();
			e.printStackTrace();
		}		
		//		}
	}


}
